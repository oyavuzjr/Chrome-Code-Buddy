{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","Components/Ocr.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","screenShot","setScreenShot","heightWidth","setHeightWidth","useEffect","video","document","getElementsByClassName","canvas","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","style","image","download","currentTime","href","toDataURL","console","log","window","postMessage","type","myMessage","getScreenShot","addEventListener","event","Provider","value","Modal","addPx","initial","toAdd","a","num","parseInt","slice","toReturn","toString","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","className","transform","color","size","src","onClick","img","Tesseract","recognize","logger","m","then","text","data","getElementById","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.250e6689.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 100, y: 100 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from \"react\";\nimport useWindowPosition from \"../Hooks/useWindowPosition\";\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n  const [screenShot, setScreenShot] = useState(undefined);\n  const [heightWidth, setHeightWidth] = useState({});\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  function getScreenShot() {\n    let video = document.getElementsByClassName(\"video-stream\")[0];\n    let canvas = document.createElement(\"canvas\");\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    let context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n\n    setHeightWidth({height:video.style.height, width: video.style.width})\n    let image = document.createElement(\"a\");\n    image.download = \"snap-\" + video.currentTime + \".png\";\n    image.href = canvas.toDataURL(\"image/jpeg\", 1.0);\n    console.log(\"Baban\");\n    console.log(image.href);\n    window.postMessage({ type: \"GET_SCREENSHOT\", myMessage: image.href }, \"*\");\n\n    return image.href;\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    setScreenShot(getScreenShot());\n\n    window.addEventListener(\"message\", function (event) {});\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        screenShot,\n        windowPosition,\n        heightWidth\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport {recognize} from './Ocr.js'\n\n\nconst addPx = (initial, toAdd) => {\n\n  console.log(initial);\n  let num;\n  num = parseInt(initial.slice(0,-2))\n  num += toAdd\n  let toReturn = num.toString()+\"px\";\n\n  return toReturn\n\n}\n\nconst Modal = () => {\n  const addPx = async (initial, toAdd) => {\n  \n\n    console.log(initial);\n    let num;\n    num = parseInt(initial.slice(0,-2))\n    num += toAdd\n    let toReturn = num.toString()+\"px\";\n  \n    return toReturn\n  \n  }\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, screenShot, heightWidth}) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition, height:addPx(heightWidth.height, 200), width:addPx(heightWidth.width, 100)\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                    <div className=\"modal-handle\">\n                      <div className=\"modal-close-button\">\n                        <X color=\"#5d6484\" size=\"14\" />\n                      </div>\n                    </div>\n                    <div className=\"modal-content\">\n                    <img src={screenShot} style={{height:heightWidth.height, width:heightWidth.width}}/>\n                    <button onClick={() => recognize(screenShot)}>{\"Selam\"}</button>\n                    <input type=\"text\" id=\"Output\" style={{width:\"100px\", height:\"50px\"}}/>\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;","import Tesseract from 'tesseract.js';\n\n\nfunction recognize(img){\n    Tesseract.recognize(\n        img,\n        'eng',\n        { logger: m => console.log(m) }\n      ).then(({ data: { text } }) => {\n        console.log(text);\n        document.getElementById(\"Output\").value = text\n      })\n\n}\n\nexport {recognize}\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <ModalProvider>\n      <Modal />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}