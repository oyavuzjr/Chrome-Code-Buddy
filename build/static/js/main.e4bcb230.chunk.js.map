{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","screenShot","setScreenShot","useEffect","window","addEventListener","event","video","document","getElementsByClassName","canvas","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","image","download","currentTime","href","toDataURL","console","log","postMessage","type","myMessage","getScreenShot","Provider","value","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","className","style","transform","color","size","src","App","ReactDOM","render","getElementById"],"mappings":"0QAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAKC,EAAG,OCArBC,EAAeC,IAAMC,cAAc,IAmDjCC,EAjDO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eAD8B,EAEAQ,wBAASC,GAFT,gCAGFD,wBAASC,IAHP,mBAG/BC,EAH+B,KAGnBC,EAHmB,KAqCtC,OAPAC,qBAAU,WAERC,OAAOC,iBAAiB,WAAW,SAASC,GAC1CJ,EAxBJ,WACE,IAAIK,EAAQC,SAASC,uBAAuB,gBAAgB,GACxDC,EAASF,SAASG,cAAc,UAEpCD,EAAOE,MAAQL,EAAMM,WACrBH,EAAOI,OAASP,EAAMQ,YAERL,EAAOM,WAAW,MACxBC,UAAUV,EAAO,EAAG,EAAGG,EAAOE,MAAOF,EAAOI,QAEpD,IAAII,EAAQV,SAASG,cAAc,KAOnC,OANAO,EAAMC,SAAW,QAAUZ,EAAMa,YAAc,OAC/CF,EAAMG,KAAOX,EAAOY,UAAU,aAAc,GAC5CC,QAAQC,IAAI,SACZD,QAAQC,IAAIN,EAAMG,MAClBjB,OAAOqB,YAAY,CAAEC,KAAM,iBAAkBC,UAAWT,EAAMG,MAAQ,KAE/DH,EAAMG,KAOGO,SAEf,IAGD,kBAAClC,EAAamC,SAAd,CACEC,MAAO,CACL7B,aACAV,mBAGDO,ICXQiC,EAjCD,WACZ,OACE,kBAACrC,EAAasC,SAAd,MACG,gBAAGzC,EAAH,EAAGA,eAAgB0C,EAAnB,EAAmBA,yBAA0BhC,EAA7C,EAA6CA,WAA7C,OACC,kBAAC,IAAD,CACEiC,OAAO,gBACPC,gBAAiB,CAAC3C,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GACzD2C,SAAUH,EAA2B,CAAEzC,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GAAM,MAEpF,yBAAK4C,GAAG,QAAQC,UAAU,eAAeC,MAAO,CAC9CC,UAAWjD,IAEX,yBAAK+C,UAAU,6BACX,oCACE,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAGG,MAAM,UAAUC,KAAK,SAG5B,yBAAKJ,UAAU,iBACf,yBAAKK,IAAK1C,cCVf2C,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCPNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGtC,SAASuC,eAAe,kB","file":"static/js/main.e4bcb230.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 100, y: 100 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n  const [screenShot, setScreenShot] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  function getScreenShot(){\n    let video = document.getElementsByClassName(\"video-stream\")[0];\n    let canvas = document.createElement('canvas');\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    let context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    let image = document.createElement('a');\n    image.download = 'snap-' + video.currentTime + '.png';\n    image.href = canvas.toDataURL('image/jpeg', 1.0);\n    console.log(\"Baban\")\n    console.log(image.href)\n    window.postMessage({ type: \"GET_SCREENSHOT\", myMessage: image.href }, \"*\");\n\n    return image.href\n\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      setScreenShot(getScreenShot());\n      });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        screenShot,\n        windowPosition,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\n\nconst Modal = () => {\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, screenShot}) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition,\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                    <div className=\"modal-handle\">\n                      <div className=\"modal-close-button\">\n                        <X color=\"#5d6484\" size=\"14\" />\n                      </div>\n                    </div>\n                    <div className=\"modal-content\">\n                    <img src={screenShot}/>\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <ModalProvider>\n      <Modal />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}