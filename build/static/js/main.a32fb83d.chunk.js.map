{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","screenShot","setScreenShot","heightWidth","setHeightWidth","useEffect","video","document","getElementsByClassName","canvas","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","style","image","download","currentTime","href","toDataURL","console","log","window","postMessage","type","myMessage","getScreenShot","addEventListener","event","Provider","value","Modal","addPx","initial","toAdd","a","num","parseInt","slice","toReturn","toString","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","className","transform","color","size","src","App","ReactDOM","render","getElementById"],"mappings":"iSAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAKC,EAAG,OCArBC,EAAeC,IAAMC,cAAc,IAoDjCC,EAlDO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eAD8B,EAEAQ,wBAASC,GAFT,gCAGFD,wBAASC,IAHP,mBAG/BC,EAH+B,KAGnBC,EAHmB,OAIAH,mBAAS,IAJT,mBAI/BI,EAJ+B,KAIlBC,EAJkB,KAqCtC,OAPAC,qBAAU,WAERH,EAtBF,WACE,IAAII,EAAQC,SAASC,uBAAuB,gBAAgB,GACxDC,EAASF,SAASG,cAAc,UAEpCD,EAAOE,MAAQL,EAAMM,WACrBH,EAAOI,OAASP,EAAMQ,YAERL,EAAOM,WAAW,MACxBC,UAAUV,EAAO,EAAG,EAAGG,EAAOE,MAAOF,EAAOI,QAEpDT,EAAe,CAAES,OAAQP,EAAMW,MAAMJ,OAAQF,MAAOL,EAAMW,MAAMN,QAChE,IAAIO,EAAQX,SAASG,cAAc,KAMnC,OALAQ,EAAMC,SAAW,QAAUb,EAAMc,YAAc,OAC/CF,EAAMG,KAAOZ,EAAOa,UAAU,aAAc,GAC5CC,QAAQC,IAAI,SACZC,OAAOC,YAAY,CAAEC,KAAM,iBAAkBC,UAAWV,EAAMG,MAAQ,KAE/DH,EAAMG,KAKCQ,IAEdJ,OAAOK,iBAAiB,WAAW,SAAUC,SAC5C,IAGD,kBAACrC,EAAasC,SAAd,CACEC,MAAO,CACLhC,aACAV,iBACAY,gBAGDL,ICsBQoC,EAnED,WACZ,IAAMC,EAAK,uCAAG,WAAOC,EAASC,GAAhB,iBAAAC,EAAA,6DACZf,QAAQC,IAAIY,GAEZG,EAAMC,SAASJ,EAAQK,MAAM,GAAI,IAE7BC,GADJH,GAAOF,GACYM,WAAa,KALpB,kBAOLD,GAPK,2CAAH,wDASX,OACE,kBAAChD,EAAakD,SAAd,MACG,gBACCrD,EADD,EACCA,eACAsD,EAFD,EAECA,yBACA5C,EAHD,EAGCA,WACAE,EAJD,EAICA,YAJD,OAMC,kBAAC,IAAD,CACE2C,OAAO,gBACPC,gBAAiB,CAAEvD,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GAC1DuD,SACEH,EACI,CAAErD,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GACzC,MAGN,yBAAKwD,GAAG,QAAQC,UAAU,gBACxB,yBACEA,UAAU,4BACVjC,MAAO,CACLkC,UAAW5D,EACXsB,OAAQsB,EAAMhC,EAAYU,OAAQ,MAGpC,oCACE,yBAAKqC,UAAU,cACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAGE,MAAM,UAAUC,KAAK,SAG5B,yBACEH,UAAU,gBACVjC,MAAO,CACLJ,OAAQsB,EAAMhC,EAAYU,OAAQ,MAGpC,yBACEqC,UAAU,OACVI,IAAKrD,EACLgB,MAAO,CACLJ,OAAQV,EAAYU,OACpBF,MAAOR,EAAYQ,mBC1C5B4C,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCPNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGlD,SAASmD,eAAe,kB","file":"static/js/main.a32fb83d.chunk.js","sourcesContent":["\r\nconst useWindowPosition = () => {\r\n  return {\r\n    windowPosition:  { x: 100, y: 100 },\r\n  }\r\n};\r\n\r\nexport default useWindowPosition;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useWindowPosition from \"../Hooks/useWindowPosition\";\r\n\r\nexport const ModalContext = React.createContext({});\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const { windowPosition } = useWindowPosition();\r\n  const [extensionId, setExtensionId] = useState(undefined);\r\n  const [screenShot, setScreenShot] = useState(undefined);\r\n  const [heightWidth, setHeightWidth] = useState({});\r\n\r\n  function getExtensionId() {\r\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\r\n  }\r\n\r\n  function getScreenShot() {\r\n    let video = document.getElementsByClassName(\"video-stream\")[0];\r\n    let canvas = document.createElement(\"canvas\");\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    let context = canvas.getContext(\"2d\");\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    setHeightWidth({ height: video.style.height, width: video.style.width });\r\n    let image = document.createElement(\"a\");\r\n    image.download = \"snap-\" + video.currentTime + \".png\";\r\n    image.href = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n    console.log(\"Baban\");\r\n    window.postMessage({ type: \"GET_SCREENSHOT\", myMessage: image.href }, \"*\");\r\n\r\n    return image.href;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Set up event listeners from Content script\r\n    setScreenShot(getScreenShot());\r\n\r\n    window.addEventListener(\"message\", function (event) {});\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        screenShot,\r\n        windowPosition,\r\n        heightWidth,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React from \"react\";\r\nimport { X } from \"react-feather\";\r\nimport Draggable from \"react-draggable\";\r\nimport { ModalContext } from \"../Contexts/ModalProvider\";\r\n\r\nconst Modal = () => {\r\n  const addPx = async (initial, toAdd) => {\r\n    console.log(initial);\r\n    let num;\r\n    num = parseInt(initial.slice(0, -2));\r\n    num += toAdd;\r\n    let toReturn = num.toString() + \"px\";\r\n\r\n    return toReturn;\r\n  };\r\n  return (\r\n    <ModalContext.Consumer>\r\n      {({\r\n        windowPosition,\r\n        hasDraggedWindowPosition,\r\n        screenShot,\r\n        heightWidth,\r\n      }) => (\r\n        <Draggable\r\n          handle=\".modal-handle\"\r\n          defaultPosition={{ x: windowPosition.x, y: windowPosition.y }}\r\n          position={\r\n            hasDraggedWindowPosition\r\n              ? { x: windowPosition.x, y: windowPosition.y }\r\n              : null\r\n          }\r\n        >\r\n          <div id=\"modal\" className=\"modal-window\">\r\n            <div\r\n              className=\"modal-window-inner-border\"\r\n              style={{\r\n                transform: windowPosition,\r\n                height: addPx(heightWidth.height, 20),\r\n              }}\r\n            >\r\n              <>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"modal-handle\">\r\n                    <div className=\"modal-close-button\">\r\n                      <X color=\"#5d6484\" size=\"14\" />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"modal-content\"\r\n                    style={{\r\n                      height: addPx(heightWidth.height, 15),\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className=\"ohaa\"\r\n                      src={screenShot}\r\n                      style={{\r\n                        height: heightWidth.height,\r\n                        width: heightWidth.width,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      )}\r\n    </ModalContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Modal from './Components/Modal';\r\nimport ModalProvider from './Contexts/ModalProvider';\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <Modal />\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>, document.getElementById('modal-window'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}